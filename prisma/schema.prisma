// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema 

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "sqlite"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? //@db.Text
  access_token      String? //@db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? //@db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  description   String?
  accounts      Account[]
  sessions      Session[]
  subjects      Subjects[]
}

model Subjects {
  subjectId       String            @id @default(cuid())
  ownerId         String
  name            String
  workingTime     Int               @default(25)
  restTime        Int               @default(5)
  totalTime       Int               @default(0)
  timeObjetive    Int               @default(0)
  song            String            @default("https://www.youtube.com/watch?v=l98w9OSKVNA")
  individualtimes IndividualTimes[]
  user            User              @relation(fields: [ownerId], references: [id], onDelete: Cascade)

  @@index([ownerId])
}

model IndividualTimes {
  id         String   @id @default(cuid())
  subjectId  String
  date       DateTime @default(now())
  workedTime Int
  totalTime  Int
  asignatura Subjects @relation(fields: [subjectId], references: [subjectId], onDelete: Cascade)

  @@index([subjectId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
